// hello hello

%w[test test]

%sql[
  select * from table where steam_id = `loser`;
]

print 'test' if true

test_var = 'help'
test_num = (3.142 or 123)

func test?
  // test test
end

func derp!
  // schmest schmest
end

switch test_var
case 'nothelp', 'help', 1, 2, 3
  print 'test test'
case 5
  print 'derp'
case false
  print 'true'
else
  print 'not test test'
end


String::sub 'a', 1, 2

func foo(b, *args)
  print :args.test

  if b
    print !b
  elsif c or d
    print c
  else
    print b
  end

  yield
end

func bar(a = 100, b)
  a = 123
  b = 321
end

class DiscordLogger
  member_var = 123

  func DiscordLogger(id, token)
    this.id = id or ''
    this.token = token or ''
    this.url = 'https://discordapp.com/api/webhooks/#{this.id}/#{this.token}'
    this.prefix = ''
  end

  func prefix(p)
    this.prefix or= p.to_s
  end

  func add(msg)
    http::Post this.url, {
      content: :this.prefix + msg,
    }
  end

  func amazing
    print 'amazing function'
  end
end

func dangerous!
  print 'i am dangerous, rawr'
end

func boolean?
  print 'i return booleans!'
end

dangerous!
boolean?

admin_logger = new DiscordLogger '123456789', 'aaaaaaaaabbbbbbbbbbbbccccccccccc'
print :admin_logger.member_var

bar 101, fn
  print 'hey hay :D'
end

test = 'hello'
test = 'world'

test.gsub 'a', 'b'

foo test: 'hello world ish maybe' do
  print 'test'
end

class NSClass < DiscordLogger
  func amazing
    print 'this function is amazing'

    super
  end
end

test_obj = new NSClass 'a', 'b'
test_obj.amazing

//include 'luna/support/support.lun'
