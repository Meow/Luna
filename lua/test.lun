test_var = 'help'

switch test_var
  case 'nothelp', 'help', 1, 2, 3
    print 'test test'
  case 4
  case 5
    print 'derp'
  case false
    print 'true'
  else
    print 'not test test'
end

a = {
  key: 123,
  shit: 321
}

String::sub 'a', 1, 2

func foo(b, *args)
  print :args.test

  yield
end

func bar(a = 100, b)
  a = 123
  b = 321
end

class MyClass
  func MyClass
    print 'class constructor called'
    this.init
  end

  func test_member(a, b)
    print 'test member'
  end

  func init
    this
  end
end

testing = new MyClass
testing.test_member
testing.init

bar 101, fn
  print 'shite'
end

test = 'hello'
test = 'world'

test.gsub 'a', 'b'

foo test: 'hello world ish maybe' do
  print 'test'
end

test or= {}

namespace Test
  func foo
  end
end

//include 'luna/support/support.lun'
